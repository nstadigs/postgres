name: Release

on:
  push:
    branches:
      - chore/docker_ci
  workflow_dispatch:

jobs:
  job1:
    runs-on: ubuntu-20.04
    # Map a step output to a job output
    outputs:
      version: ${{ steps.step1.outputs.test }}
      platforms: ${{ steps.step2.outputs.test }}
    steps:
      - id: step1
        run: echo "::set-output name=test::$(cat docker.vars.json | jq '.[\"docker-version\"]'"
      - id: step2
        run: echo "::set-output name=test::$(cat common.vars.json | jq '.[\"postgres-version\"]')"  

  job2:
    runs-on: ubuntu-latest
    needs: job1
    steps:
      - run: echo ${{needs.job1.outputs.output1}} ${{needs.job1.outputs.output2}}

  # docker-hub:
  #   name: Release on Docker Hub
  #   runs-on: ubuntu-20.04
  #   steps:
  #     - uses: actions/checkout@v2

  #     - uses: actions/setup-node@v2
  #       with:
  #         node-version: "14"

  #     - id: s
  #       run: |
  #         cat docker.vars.json | jq '.["docker-version"]'



  #     - name: Prepare build
  #       run: |
  #         npm clean-install
  #         npm run pkg
  #     - uses: docker/setup-qemu-action@v1
  #       with:
  #         platforms: amd64,arm64

  #     - uses: docker/setup-buildx-action@v1

  #     - uses: docker/login-action@v1
  #       with:
  #         username: ${{ secrets.DOCKER_USERNAME }}
  #         password: ${{ secrets.DOCKER_PASSWORD }}

  #     - uses: docker/build-push-action@v2
  #       with:
  #         context: .
  #         push: true
  #         tags: supabase/postgres:latest,supabase/postgres:v${{ needs.semantic-release.outputs.new-release-version }}
  #         platforms: linux/amd64,linux/arm64